A Comedi RPi howto:

Login as root or use sudo or other means to get root access.

Install the Comedi software via the Debian apt or dselect command:
libcomedi-dev
libcomedi0
python-comedilib

Install the github daq_gert branch:
git clone https://github.com/nsaspook/daq_gert.git
cd daq_gert

Copy the daq_gert.ko and comedi.ko modules to the /lib/modules/3.2.27+/kernel/drivers/staging/comedi/drivers/
directory. You may have to create the comedi/drivers/ directories.
cp daq_gert.ko comedi.ko /lib/modules/3.2.27+/kernel/drivers/staging/comedi/drivers/

Copy the comedi.conf file to /etc/modprobe.d/: cp comedi.conf /etc/modprobe.d/
This will create the /dev/comedi[0..3] device files when the comedi module is loaded
when daq_gert.ko is installed via modprobe: 
modprobe daq_gert

Run the dmesg command: You should see a similar message at the end.
[278631.474122] comedi: module is from the staging directory, the quality is unknown, you have been warned.
[278631.480882] comedi: version 0.7.76 - http://www.comedi.org
[278631.484498] daq_gert: module is from the staging directory, the quality is unknown, you have been warned.

Run the comedi_conf command:  
comedi_config /dev/comedi0 daq_gert
This will attach the daq_gert module to the /dev/comedi0 device file.

dmesg should show something like this.
[278729.086442] comedi comedi0: Gert Board Detected
[278729.086482] comedi comedi0: RPi Board Rev 3, Serial 00000000c57dd1ee
[278729.086513] comedi comedi0: daq_gert: daq_gert, iobase 0x20200000, ioremap 0xcea30000

Run the comedi_test command: The analog devices are placeholder fake devices for now.

comedi_test 
I: Comedi version: 0.7.76
I: Comedilib version: unknown =)
I: driver name: daq_gert
I: device name: daq_gert
I:
I: subdevice 0
I: testing info...
rev 1
I: subdevice type: 5 (digital I/O)
  number of channels: 17
  max data value: 1
  ranges:
    all chans: [0,5]
I: testing insn_read...
rev 1
comedi_do_insn returned 1, good
I: testing insn_read_0...
comedi_do_insn returned 0, good
I: testing insn_read_time...
rev 1
comedi_do_insn: 3
read time: 9 us
I: testing cmd_no_cmd...
got EIO, good
I: testing cmd_probe_src_mask...
not applicable
I: testing cmd_probe_fast_1chan...
not applicable
I: testing cmd_read_fast_1chan...
not applicable
I: testing cmd_write_fast_1chan...
not applicable
I: testing cmd_logic_bug...
not applicable
I: testing cmd_fifo_depth_check...
not applicable
I: testing cmd_start_inttrig...
not applicable
I: testing mmap...
not applicable
I: testing read_select...
not applicable
I: testing bufconfig...
buffer length is 0, good
I:
I: subdevice 1
I: testing info...
rev 1
I: subdevice type: 1 (analog input)
  number of channels: 16
  max data value: 1023
  ranges:
    all chans: [0,3.3]
I: testing insn_read...
rev 1
comedi_do_insn returned 1, good
I: testing insn_read_0...
comedi_do_insn returned 0, good
I: testing insn_read_time...
rev 1
comedi_do_insn: 3
read time: 5 us
I: testing cmd_no_cmd...
got EIO, good
I: testing cmd_probe_src_mask...
not applicable
I: testing cmd_probe_fast_1chan...
not applicable
I: testing cmd_read_fast_1chan...
not applicable
I: testing cmd_write_fast_1chan...
not applicable
I: testing cmd_logic_bug...
not applicable
I: testing cmd_fifo_depth_check...
not applicable
I: testing cmd_start_inttrig...
not applicable
I: testing mmap...
not applicable
I: testing read_select...
not applicable
I: testing bufconfig...
buffer length is 0, good
I:
I: subdevice 2
I: testing info...
rev 1
I: subdevice type: 2 (analog output)
  number of channels: 2
  max data value: 255
  ranges:
    all chans: [0,2.047]
I: testing insn_read...
rev 1
comedi_do_insn returned 1, good
I: testing insn_read_0...
comedi_do_insn returned 0, good
I: testing insn_read_time...
rev 1
comedi_do_insn: 3
read time: 5 us
I: testing cmd_no_cmd...
got EIO, good
I: testing cmd_probe_src_mask...
not applicable
I: testing cmd_probe_fast_1chan...
not applicable
I: testing cmd_read_fast_1chan...
not applicable
I: testing cmd_write_fast_1chan...
not applicable
I: testing cmd_logic_bug...
not applicable
I: testing cmd_fifo_depth_check...
not applicable
I: testing cmd_start_inttrig...
not applicable
I: testing mmap...
not applicable
I: testing read_select...
not applicable
I: testing bufconfig...
buffer length is 0, good

At this point a program that uses the comedi lib should work:

./bmc/bmc/dist/Debug/GNU-Linux-x86/bmc

Subdev AI  1 Analog  Channels 16 Maxdata 1023 Ranges 1 : ad_range .min = 0.0, max = 3.3
Subdev AO  2 Analog  Channels 2 Maxdata 255 Ranges 1 
Subdev DIO 0 Digital Channels 17 Maxdata 1 Ranges 1 
 1.65V 1.65V 1.65V 1.65V 1.65V 1.65V 1.65V 0 0 1 1

Ctrl-C to stop.
